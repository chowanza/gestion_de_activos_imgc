generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

// --- DATOS MAESTROS DE EQUIPOS ---
model Marca {
  id      String              @id @default(uuid())
  nombre  String              @unique
  modelos ModeloDispositivo[]
}


model ModeloDispositivo {
  id      String  @id @default(uuid())
  nombre  String
  marcaId String
  marca   Marca   @relation(fields: [marcaId], references: [id])
  tipo    String
  img     String?

  computadores Computador[]
  dispositivos Dispositivo[]
}

// --- ESTRUCTURAS ORGANIZACIONALES ---
model Ubicacion {
  id           String         @id @default(uuid())
  nombre       String         @unique
  descripcion  String?
  direccion    String?
  piso         String?
  sala         String?
  computadores Computador[]
  dispositivos Dispositivo[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Empresa {
  id           String         @id @default(uuid())
  nombre       String         @unique
  descripcion  String?
  logo         String?
  departamentos Departamento[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Departamento {
  id           String         @id @default(uuid())
  nombre       String
  empresaId    String
  empresa      Empresa        @relation(fields: [empresaId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  gerenteId    String?
  gerente      Empleado?      @relation("DepartamentoGerente", fields: [gerenteId], references: [id], onDelete: SetNull, onUpdate: NoAction)
  empleados    Empleado[]     @relation("DepartamentoEmpleados")
  computadores Computador[]
  dispositivos Dispositivo[]
  asignaciones Asignaciones[]
  cargos       Cargo[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Cargo {
  id             String    @id @default(uuid())
  nombre         String
  descripcion    String?
  departamentoId String
  departamento   Departamento @relation(fields: [departamentoId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  empleados      Empleado[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Empleado {
  id                     String         @id @default(uuid())
  nombre                 String
  apellido               String
  ced                    String
  fechaNacimiento        String?
  fechaIngreso           String?
  fechaDesincorporacion  String?
  fotoPerfil             String? @db.Text
  departamentoId         String
  cargoId                String
  departamento           Departamento   @relation("DepartamentoEmpleados", fields: [departamentoId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cargo                  Cargo          @relation(fields: [cargoId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  computadores           Computador[]
  dispositivos           Dispositivo[]
  asignaciones           Asignaciones[]
  targetAsignaciones     Asignaciones[] @relation("targetEmpleado")
  departamentosGerenciados Departamento[] @relation("DepartamentoGerente")
}

model Computador {
  id                      String                    @id @default(uuid())
  serial                  String                    @unique
  estado                  String
  modeloId                String
  modelo                  ModeloDispositivo         @relation(fields: [modeloId], references: [id])
  empleadoId              String?
  empleado                Empleado?                 @relation(fields: [empleadoId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  departamentoId          String?
  departamento            Departamento?             @relation(fields: [departamentoId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ubicacionId             String?
  ubicacion               Ubicacion?                @relation(fields: [ubicacionId], references: [id], onDelete: SetNull, onUpdate: NoAction)
  
  // --- CAMPOS TÉCNICOS BASADOS EN DIAGNÓSTICO ---
  // Identificación del equipo
  equipo                  String?
  codigoImgc              String   // Cambio de nsap a codigoImgc - OBLIGATORIO
  host                    String?
  sede                    String?
  telefono                String?
  
  // Información de compra
  fechaCompra             DateTime?
  numeroFactura           String?
  proveedor               String?
  monto                   Decimal?
  
  // Sistema Operativo
  sisOperativo            String?
  arquitectura            String?
  
  // Hardware - Procesador
  procesador              String?
  
  // Hardware - Memoria RAM
  ram                     String?
  ramTipo                 String?
  ramVelocidad            String?
  ramConfiguracion        String?
  
  // Hardware - Almacenamiento
  almacenamiento          String?
  almacenamientoTipo      String?
  almacenamientoMarca     String?
  almacenamientoModelo    String?
  
  // Hardware - Placa Base
  placaBase               String?
  
  // Hardware - Gráficos
  grafica                 String?
  monitor                 String?
  
  // Hardware - Red
  macWifi                 String?
  macEthernet             String?
  
  // Software
  officeVersion           String?
  sapVersion              String?
  
  // Unidades ópticas
  unidadOptica            String?
  
  // Campos adicionales del diagnóstico
  certificaciones         String?
  regModel                String?
  regTypeNo               String?
  inputData               String?
  ndAgrement              String?
  dpn                     String?
  ex                      String?
  st                      String?
  
  // Relaciones
  asignaciones            Asignaciones[]
  historialModificaciones HistorialModificaciones[]
}

model HistorialModificaciones {
  id            String   @id @default(uuid())
  fecha         DateTime @default(now())
  campo         String
  valorAnterior String?
  valorNuevo    String?

  computadorId String
  computador   Computador @relation(fields: [computadorId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([computadorId])
}

model HistorialMovimientos {
  id          String   @id @default(uuid())
  fecha       DateTime @default(now())
  accion      String
  entidad     String
  entidadId   String?
  descripcion String
  detalles    String?
  
  usuarioId   String?
  usuario     User?    @relation(fields: [usuarioId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
  ipAddress   String?
  userAgent   String?
  
  @@index([fecha])
  @@index([accion])
  @@index([entidad])
  @@index([usuarioId])
}

model Dispositivo {
  id             String            @id @default(uuid())
  serial         String            @unique
  estado         String
  modeloId       String
  modelo         ModeloDispositivo @relation(fields: [modeloId], references: [id])
  empleadoId     String?
  empleado       Empleado?         @relation(fields: [empleadoId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  departamentoId String?
  departamento   Departamento?     @relation(fields: [departamentoId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ubicacionId    String?
  ubicacion      Ubicacion?        @relation(fields: [ubicacionId], references: [id], onDelete: SetNull, onUpdate: NoAction)
  mac            String?
  ip             String?
  codigoImgc     String            // Cambio de nsap a codigoImgc - OBLIGATORIO
  
  // Información de compra
  fechaCompra    DateTime?
  numeroFactura  String?
  proveedor      String?
  monto          Decimal?
  
  asignaciones   Asignaciones[]
}


model User {
  id       String @id @default(uuid())
  username String @unique
  password String
  role     String @default("viewer")
  
  movimientos HistorialMovimientos[]
}

model Asignaciones {
  id         Int      @id @default(autoincrement())
  date       DateTime @default(now())
  notes      String?
  actionType String
  motivo     String?
  gerente    String?
  localidad  String?
  serialC    String?
  modeloC    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  targetType String

  targetEmpleadoId String?
  targetEmpleado   Empleado? @relation(fields: [targetEmpleadoId], references: [id], name: "targetEmpleado", onDelete: NoAction, onUpdate: NoAction)

  targetDepartamentoId String?
  targetDepartamento   Departamento? @relation(fields: [targetDepartamentoId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  itemType String

  computadorId String?
  computador   Computador? @relation(fields: [computadorId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  dispositivoId String?
  dispositivo   Dispositivo? @relation(fields: [dispositivoId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  gerenteId         String?
  gerenteEmpleado   Empleado?        @relation(fields: [gerenteId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
